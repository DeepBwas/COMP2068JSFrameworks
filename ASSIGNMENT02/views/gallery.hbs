<div class="gallery-page">
  {{!-- Upload Modal --}}
  {{> upload 
    uploadId="gallery-upload"
    fileInputId="gallery-input"
    fieldName="image"
    title="Upload to Gallery"
    subtitle="Add images to your collection"
    action="/gallery/upload"
  }}

  {{!-- Delete Confirmation Modal --}}
  {{> delete 
    modalId="gallery-delete-modal"
    title="Delete Image"
    message="Are you sure you want to delete this image? This action cannot be undone."
    onConfirm="deleteGalleryImage()"
  }}

  <div class="gallery-container">
    {{!-- Gallery Header --}}
    <div class="gallery-header">
      <h1 class="gallery-title">My Gallery</h1>
      <button class="gallery-upload-btn" data-upload-trigger="gallery-upload">
        <span class="material-icons">add_photo_alternate</span>
        Upload Image
      </button>
    </div>

    {{!-- Debug Info --}}
    {{#if debug}}
      <div class="gallery-debug">
        <p>Number of images: {{images.length}}</p>
        {{#each images}}
          <div class="gallery-debug-item">
            <p>ID: {{this._id}}</p>
            <p>Key: {{this.imageKey}}</p>
            <p>URL: {{this.imageUrl}}</p>
          </div>
          <hr>
        {{/each}}
      </div>
    {{/if}}

    {{!-- Gallery Content --}}
    <div class="gallery-content">
      {{#if images.length}}
        <div class="gallery-grid">
          {{#each images}}
            <div class="gallery-item" data-image-id="{{this._id}}">
              <img 
                class="gallery-item-image"
                src="{{this.imageUrl}}" 
                alt="{{this.originalName}}" 
                loading="lazy"
              />
              <div class="gallery-item-overlay">
                <button 
                  class="gallery-expand-btn" 
                  onclick="expandGalleryImage('{{this._id}}', '{{this.imageUrl}}', '{{this.originalName}}')"
                >
                  <span class="material-icons">open_in_full</span>
                </button>
              </div>
            </div>
          {{/each}}
        </div>
        <div class="gallery-preview" id="galleryPreview">
            <button class="gallery-preview-close" onclick="closeGalleryPreview()">
                <span class="material-icons">close</span>
            </button>
            <div class="gallery-preview-content">
                <img id="galleryPreviewImage" class="gallery-preview-image" src="" alt="" />
                <div class="gallery-action-buttons">
                    <button class="gallery-edit-btn">
                        <span class="material-icons">edit</span>
                        Edit Image
                    </button>
                    <button class="gallery-download-btn" onclick="downloadImage('{{this.imageKey}}', '{{this.originalName}}')">
                        <span class="material-icons">download</span>
                        Download Image
                    </button>
                    <button class="gallery-delete-btn" onclick="showDeleteModal('gallery-delete-modal')">
                        <span class="material-icons">delete</span>
                        Delete Image
                    </button>
                </div>
            </div>
        </div>
      {{else}}
        <div class="gallery-empty">
          <span class="material-icons gallery-empty-icon">photo_library</span>
          <h2 class="gallery-empty-title">Your gallery is empty</h2>
          <p class="gallery-empty-text">Start uploading images to build your collection</p>
        </div>
      {{/if}}
    </div>
  </div>

<script>
let activeGalleryImage = null;

function expandGalleryImage(imageId, imageUrl, altText) {
  const previousActive = document.querySelector('.gallery-item-active');
  if (previousActive) {
    previousActive.classList.remove('gallery-item-active');
  }

  if (activeGalleryImage === imageId) {
    closeGalleryPreview();
    return;
  }

  activeGalleryImage = imageId;
  const currentItem = document.querySelector(`[data-image-id="${imageId}"]`);
  currentItem.classList.add('gallery-item-active');

  const previewContainer = document.getElementById('galleryPreview');
  const previewImage = document.getElementById('galleryPreviewImage');
  const galleryGrid = document.querySelector('.gallery-grid');
  const downloadBtn = previewContainer.querySelector('.gallery-download-btn');

  // Add loading class while image loads
  previewContainer.classList.add('gallery-preview-loading');
  
  previewImage.onload = function() {
    previewContainer.classList.remove('gallery-preview-loading');
  };

  previewImage.src = imageUrl;
  previewImage.alt = altText;

  galleryGrid.classList.add('gallery-grid-preview');
  previewContainer.classList.add('gallery-preview-active');
}

function closeGalleryPreview() {
  activeGalleryImage = null;
  const galleryGrid = document.querySelector('.gallery-grid');
  const previewContainer = document.getElementById('galleryPreview');
  const previewImage = document.getElementById('galleryPreviewImage');
  const activeItem = document.querySelector('.gallery-item-active');

  if (activeItem) {
    activeItem.classList.remove('gallery-item-active');
  }

  galleryGrid.classList.remove('gallery-grid-preview');
  previewContainer.classList.remove('gallery-preview-active');
}

async function downloadImage(imageKey, fileName) {
  try {
    notify.info('Preparing download...');

    const response = await fetch(`/gallery/download/${imageKey}`);
    if (!response.ok) throw new Error('Download failed');
    
    const blob = await response.blob();
    const blobUrl = window.URL.createObjectURL(blob);
    
    const link = document.createElement('a');
    link.href = blobUrl;
    link.download = fileName || 'gallery-image.jpg';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    window.URL.revokeObjectURL(blobUrl);
    
    notify.success('Download complete');
  } catch (error) {
    console.error('Download failed:', error);
    notify.error('Failed to download image');
  }
}
</script>